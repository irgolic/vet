name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  vet:
    strategy:
      matrix:
        poetry-version: [ 1.8.2 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: pipx install poetry
        name: Install poetry

      - run: pipx inject poetry vet
        name: Install vet

      - run: poetry vet
        name: Verify chain of trust
  pytest:
    strategy:
      matrix:
        python-version: [ "3.10", 3.11, 3.12 ]
        poetry-version: [ 1.8.2 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - run: poetry install
      - run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      - run: make test

  pyright:
    strategy:
      matrix:
        python-version: [ "3.10", 3.11, 3.12 ]
        pyright-version: [ 1.1.356 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - run: poetry install --with dev --with test
      - run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      - uses: jakebailey/pyright-action@v1
        with:
          version: ${{ matrix.pyright-version }}

  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chartboost/ruff-action@v1
        with:
          args: "check"
      - uses: chartboost/ruff-action@v1
        with:
          args: "format --check"